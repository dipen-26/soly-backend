# Generated by Django 5.2.4 on 2025-07-10 15:34

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('message', models.TextField(blank=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=20)),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('sentiment_score', models.FloatField(null=True)),
                ('fraud_score', models.FloatField(null=True)),
                ('donor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donations_sent', to=settings.AUTH_USER_MODEL)),
                ('streamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PointsReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('cost', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_auto_fulfill', models.BooleanField(default=False)),
                ('max_per_stream', models.PositiveIntegerField(null=True)),
                ('max_per_user_per_stream', models.PositiveIntegerField(null=True)),
                ('cooldown', models.DurationField(null=True)),
                ('popularity_score', models.FloatField(default=0.0)),
                ('recommended_cost', models.PositiveIntegerField(null=True)),
                ('user_segments', models.JSONField(default=list)),
                ('streamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RevenueShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_share', models.PositiveSmallIntegerField(default=70)),
                ('bits_share', models.PositiveSmallIntegerField(default=70)),
                ('donation_share', models.PositiveSmallIntegerField(default=95)),
                ('partnership_level', models.PositiveSmallIntegerField(default=0)),
                ('partnership_start_date', models.DateField(null=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('payment_details', models.JSONField(default=dict)),
                ('minimum_payout', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=10)),
                ('revenue_prediction', models.JSONField(default=dict)),
                ('growth_trajectory', models.JSONField(default=dict)),
                ('streamer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.PositiveSmallIntegerField()),
                ('status', models.CharField(max_length=20)),
                ('auto_renew', models.BooleanField(default=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('current_period_start', models.DateTimeField()),
                ('current_period_end', models.DateTimeField()),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('payment_method', models.CharField(max_length=50)),
                ('churn_risk', models.FloatField(null=True)),
                ('lifetime_value', models.FloatField(null=True)),
                ('streamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to=settings.AUTH_USER_MODEL)),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('payment_method', models.CharField(max_length=50)),
                ('payment_provider', models.CharField(max_length=50)),
                ('provider_transaction_id', models.CharField(max_length=100)),
                ('fraud_score', models.FloatField(null=True)),
                ('risk_factors', models.JSONField(default=list)),
                ('donation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='monetization.donation')),
                ('subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='monetization.subscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChannelPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_balance', models.BigIntegerField(default=0)),
                ('total_earned', models.BigIntegerField(default=0)),
                ('total_spent', models.BigIntegerField(default=0)),
                ('last_earned', models.DateTimeField(null=True)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('reward_preferences', models.JSONField(default=list)),
                ('streamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_points', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'streamer')},
            },
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('status', models.CharField(max_length=20)),
                ('payout_method', models.CharField(max_length=50)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(null=True)),
                ('earnings_breakdown', models.JSONField(default=dict)),
                ('fees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('anomaly_score', models.FloatField(null=True)),
                ('verification_status', models.CharField(default='pending', max_length=20)),
                ('streamer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['streamer', 'status'], name='monetizatio_streame_54ada6_idx'), models.Index(fields=['period_start', 'period_end'], name='monetizatio_period__d3a319_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['streamer', 'status'], name='monetizatio_streame_a3ca6b_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['current_period_end'], name='monetizatio_current_9e703e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subscription',
            unique_together={('subscriber', 'streamer')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['user', 'created_at'], name='monetizatio_user_id_05650d_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status', 'created_at'], name='monetizatio_status_6594b2_idx'),
        ),
    ]
